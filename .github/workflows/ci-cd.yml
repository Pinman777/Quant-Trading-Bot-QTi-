name: QTi CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

env:
  PYTHONPATH: ${{ github.workspace }}/QTi
  NODE_ENV: production

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10']
        node-version: [16.x, 18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: QTi/frontend/package-lock.json
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r QTi/requirements.txt
        pip install pytest pytest-cov
    
    - name: Install Node.js dependencies
      run: |
        cd QTi/frontend
        npm ci
    
    - name: Run Python tests with coverage
      run: |
        cd QTi
        python -m pytest --cov=backend --cov-report=xml
    
    - name: Run Node.js tests
      run: |
        cd QTi/frontend
        npm test
    
    - name: Upload Python coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./QTi/coverage.xml
        fail_ci_if_error: true

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
    
    - name: Run Bandit security checks
      run: |
        python -m pip install bandit
        bandit -r QTi/backend -f json -o bandit-results.json
    
    - name: Upload security scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: bandit-results.json

  build:
    needs: [test, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: QTi/frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r QTi/requirements.txt
        cd QTi/frontend
        npm ci
    
    - name: Build frontend
      run: |
        cd QTi/frontend
        npm run build
    
    - name: Create release package
      run: |
        cd QTi
        zip -r ../qti-release.zip . -x "*.git*" "*.pyc" "__pycache__/*" "venv/*"
    
    - name: Upload release package
      uses: actions/upload-artifact@v3
      with:
        name: qti-release
        path: qti-release.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download release package
      uses: actions/download-artifact@v3
      with:
        name: qti-release
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./QTi/frontend/dist
    
    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: qti-release.zip
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 